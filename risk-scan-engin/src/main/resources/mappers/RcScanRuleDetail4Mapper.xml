<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjhx.risk.scan.dao.RcScanRuleDetail4Mapper">
	<resultMap id="BaseResultMap" type="com.cjhx.risk.scan.model.RcScanRuleDetail">
		<id column="SCAN_RULE_DETAIL_ID" jdbcType="CHAR" property="scanRuleDetailId" />
		<result column="SCAN_RULE_ID" jdbcType="CHAR" property="scanRuleId" />
		<result column="RULE_ID" jdbcType="CHAR" property="ruleId" />
		<result column="ISSUER_ID" jdbcType="VARCHAR" property="issuerId" />
		<result column="ISSUER_NAME" jdbcType="VARCHAR" property="issuerName" />
		<result column="CHECK_RESULT" jdbcType="CHAR" property="checkResult" />
		<result column="RISK_ACCMULATION" jdbcType="DECIMAL" property="riskAccmulation" />
		<result column="TOTAL_VALUE" jdbcType="VARCHAR" property="totalValue" />
		<result column="SET_VALUE" jdbcType="VARCHAR" property="setValue" />
	</resultMap>
	<sql id="Base_Column_List">
		SCAN_RULE_DETAIL_ID, SCAN_RULE_ID, RULE_ID, ISSUER_ID,
		ISSUER_NAME, CHECK_RESULT,
		RISK_ACCMULATION, TOTAL_VALUE, SET_VALUE
	</sql>

	<select id="getScanSeqId" resultType="java.lang.String">
		select
		LPAD(TO_CHAR(SEQ_RC_SCAN_RULE_DETAIL_4.NEXTVAL),20,'0') from dual
	</select>

	<select id="selectTriggerRcScanRuleDetailByScanRuleId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from RC_SCAN_RULE_DETAIL_4
		where SCAN_RULE_ID = #{scanRuleId,jdbcType=CHAR}
		and CHECK_RESULT in ('1','2','3')
		and EXCLUDE_BY_MUTEX = '0'
		and EXCLUDE_BY_UNION = '0'
	</select>
	
	<select id="selectRiskAccmulationOfTheDayBefore" resultType="com.cjhx.risk.scan.model.RcScanRuleDetail">
		with scan_id_tb as
		  (select temp.scanId,temp.startDate from (
		    select row_number() over(order by s.sequence desc) as rnum, 
		    s.scan_id as scanId,s.start_date as startDate
		    from rc_scan s
		    where s.status = 'C'
		    and s.sequence <![CDATA[<]]> (select s.sequence from rc_scan s where s.scan_id = #{scanId})
		  )temp
		  where temp.rnum = ${rowNum})
		
		select (select startDate from scan_id_tb) as comupteDate,
		       db.risk_accmulation as riskAccmulation,
		       de.status as status
		from rc_scan_rule_detail_4 db,rc_scan_rule_detail_4 d4,rc_scan_rule de
		where db.check_result in ('1','2','3')
		and db.exclude_by_mutex = '0'
		and db.exclude_by_union = '0'
		and db.scan_rule_id = de.scan_rule_id
		and (de.status = '1' or de.status = '0' and de.check_result in ('1','2','3'))
		and de.scan_id = (select scanId from scan_id_tb)
		and db.rule_id = d4.rule_id
		and db.issuer_id = d4.issuer_id
		and d4.scan_rule_detail_id = #{scanRuleDetailId}
	</select>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from RC_SCAN_RULE_DETAIL_4
		where SCAN_RULE_DETAIL_ID =
		#{scanRuleDetailId,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		RC_SCAN_RULE_DETAIL_4
		where SCAN_RULE_DETAIL_ID =
		#{scanRuleDetailId,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="com.cjhx.risk.scan.domain.RcScanRuleDetail4">
		insert into
		RC_SCAN_RULE_DETAIL_4 (SCAN_RULE_DETAIL_ID, SCAN_RULE_ID,
		RULE_ID,
		ISSUER_ID, ISSUER_NAME, CHECK_RESULT,
		RISK_ACCMULATION, TOTAL_VALUE,
		SET_VALUE)
		values (#{scanRuleDetailId,jdbcType=CHAR},
		#{scanRuleId,jdbcType=CHAR},
		#{ruleId,jdbcType=CHAR},
		#{issuerId,jdbcType=VARCHAR}, #{issuerName,jdbcType=VARCHAR},
		#{checkResult,jdbcType=CHAR},
		#{riskAccmulation,jdbcType=DECIMAL},
		#{totalValue,jdbcType=VARCHAR}, #{setValue,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.cjhx.risk.scan.domain.RcScanRuleDetail4">
		insert into RC_SCAN_RULE_DETAIL_4
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="scanRuleDetailId != null">
				SCAN_RULE_DETAIL_ID,
			</if>
			<if test="scanRuleId != null">
				SCAN_RULE_ID,
			</if>
			<if test="ruleId != null">
				RULE_ID,
			</if>
			<if test="issuerId != null">
				ISSUER_ID,
			</if>
			<if test="issuerName != null">
				ISSUER_NAME,
			</if>
			<if test="checkResult != null">
				CHECK_RESULT,
			</if>
			<if test="riskAccmulation != null">
				RISK_ACCMULATION,
			</if>
			<if test="totalValue != null">
				TOTAL_VALUE,
			</if>
			<if test="setValue != null">
				SET_VALUE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="scanRuleDetailId != null">
				#{scanRuleDetailId,jdbcType=CHAR},
			</if>
			<if test="scanRuleId != null">
				#{scanRuleId,jdbcType=CHAR},
			</if>
			<if test="ruleId != null">
				#{ruleId,jdbcType=CHAR},
			</if>
			<if test="issuerId != null">
				#{issuerId,jdbcType=VARCHAR},
			</if>
			<if test="issuerName != null">
				#{issuerName,jdbcType=VARCHAR},
			</if>
			<if test="checkResult != null">
				#{checkResult,jdbcType=CHAR},
			</if>
			<if test="riskAccmulation != null">
				#{riskAccmulation,jdbcType=DECIMAL},
			</if>
			<if test="totalValue != null">
				#{totalValue,jdbcType=VARCHAR},
			</if>
			<if test="setValue != null">
				#{setValue,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	
	<insert id="insertRcScanRuleDetailSelective" parameterType="com.cjhx.risk.scan.model.RcScanRuleDetail">
		insert into RC_SCAN_RULE_DETAIL_4
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="scanRuleDetailId != null">
				SCAN_RULE_DETAIL_ID,
			</if>
			<if test="scanRuleId != null">
				SCAN_RULE_ID,
			</if>
			<if test="ruleId != null">
				RULE_ID,
			</if>
			<if test="issuerId != null">
				ISSUER_ID,
			</if>
			<if test="issuerName != null">
				ISSUER_NAME,
			</if>
			<if test="checkResult != null">
				CHECK_RESULT,
			</if>
			<if test="riskAccmulation != null">
				RISK_ACCMULATION,
			</if>
			<if test="totalValue != null">
				TOTAL_VALUE,
			</if>
			<if test="setValue != null">
				SET_VALUE,
			</if>
			EXCLUDE_BY_MUTEX,
			EXCLUDE_BY_UNION
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="scanRuleDetailId != null">
				#{scanRuleDetailId,jdbcType=CHAR},
			</if>
			<if test="scanRuleId != null">
				#{scanRuleId,jdbcType=CHAR},
			</if>
			<if test="ruleId != null">
				#{ruleId,jdbcType=CHAR},
			</if>
			<if test="issuerId != null">
				#{issuerId,jdbcType=VARCHAR},
			</if>
			<if test="issuerName != null">
				#{issuerName,jdbcType=VARCHAR},
			</if>
			<if test="checkResult != null">
				#{checkResult,jdbcType=CHAR},
			</if>
			<if test="riskAccmulation != null">
				#{riskAccmulation,jdbcType=DECIMAL},
			</if>
			<if test="totalValue != null">
				#{totalValue,jdbcType=VARCHAR},
			</if>
			<if test="setValue != null">
				#{setValue,jdbcType=VARCHAR},
			</if>
			'0',
			'0'
		</trim>
	</insert>
	
	<update id="updateRcScanRuleDetailByScanRuleDetailIdSelective" parameterType="com.cjhx.risk.scan.model.RcScanRuleDetail">
		update RC_SCAN_RULE_DETAIL_4
		<set>
			<if test="scanRuleId != null">
				SCAN_RULE_ID = #{scanRuleId,jdbcType=CHAR},
			</if>
			<if test="ruleId != null">
				RULE_ID = #{ruleId,jdbcType=CHAR},
			</if>
			<if test="issuerId != null">
				ISSUER_ID = #{issuerId,jdbcType=VARCHAR},
			</if>
			<if test="issuerName != null">
				ISSUER_NAME = #{issuerName,jdbcType=VARCHAR},
			</if>
			<if test="checkResult != null">
				CHECK_RESULT = #{checkResult,jdbcType=CHAR},
			</if>
			<if test="riskAccmulation != null">
				RISK_ACCMULATION = #{riskAccmulation,jdbcType=DECIMAL},
			</if>
			<if test="totalValue != null">
				TOTAL_VALUE = #{totalValue,jdbcType=VARCHAR},
			</if>
			<if test="setValue != null">
				SET_VALUE = #{setValue,jdbcType=VARCHAR},
			</if>
		</set>
		where SCAN_RULE_DETAIL_ID = #{scanRuleDetailId,jdbcType=CHAR}
	</update>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.cjhx.risk.scan.domain.RcScanRuleDetail4">
		update RC_SCAN_RULE_DETAIL_4
		<set>
			<if test="scanRuleId != null">
				SCAN_RULE_ID = #{scanRuleId,jdbcType=CHAR},
			</if>
			<if test="ruleId != null">
				RULE_ID = #{ruleId,jdbcType=CHAR},
			</if>
			<if test="issuerId != null">
				ISSUER_ID = #{issuerId,jdbcType=VARCHAR},
			</if>
			<if test="issuerName != null">
				ISSUER_NAME = #{issuerName,jdbcType=VARCHAR},
			</if>
			<if test="checkResult != null">
				CHECK_RESULT = #{checkResult,jdbcType=CHAR},
			</if>
			<if test="riskAccmulation != null">
				RISK_ACCMULATION = #{riskAccmulation,jdbcType=DECIMAL},
			</if>
			<if test="totalValue != null">
				TOTAL_VALUE = #{totalValue,jdbcType=VARCHAR},
			</if>
			<if test="setValue != null">
				SET_VALUE = #{setValue,jdbcType=VARCHAR},
			</if>
		</set>
		where SCAN_RULE_DETAIL_ID = #{scanRuleDetailId,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.cjhx.risk.scan.domain.RcScanRuleDetail4">
		update
		RC_SCAN_RULE_DETAIL_4
		set SCAN_RULE_ID = #{scanRuleId,jdbcType=CHAR},
		RULE_ID = #{ruleId,jdbcType=CHAR},
		ISSUER_ID =
		#{issuerId,jdbcType=VARCHAR},
		ISSUER_NAME =
		#{issuerName,jdbcType=VARCHAR},
		CHECK_RESULT =
		#{checkResult,jdbcType=CHAR},
		RISK_ACCMULATION =
		#{riskAccmulation,jdbcType=DECIMAL},
		TOTAL_VALUE =
		#{totalValue,jdbcType=VARCHAR},
		SET_VALUE =
		#{setValue,jdbcType=VARCHAR}
		where SCAN_RULE_DETAIL_ID =
		#{scanRuleDetailId,jdbcType=CHAR}
	</update>
	
	<update id="excludeAllFundSameCompanyByMutex">
		update rc_scan_rule_detail_4 set exclude_by_mutex = '1'
		where scan_rule_detail_id in (
		                          select d4.scan_rule_detail_id
		                          from rc_scan_rule_detail_4 d4
		                          inner join rc_scan_rule sr on d4.scan_rule_id = sr.scan_rule_id 
		                                                        and sr.scan_id = #{scanId} and sr.status = '0'
		                          where (exists 
		                                      (select 'X' from RC_RULE_MUTEX hm
		                                       where hm.RULE_ID = d4.rule_id
		                                       and hm.MUTEX_LEVEL = '1'
		                                       and exists
		                                                (select hd4.rule_id as ruleId
		                                                 from rc_scan_rule_detail_4 hd4
		                                                 inner join rc_scan_rule hsr on hd4.scan_rule_id = hsr.scan_rule_id 
		                                                                          and hsr.scan_id = #{scanId} and hsr.status = '0'
		                                                 where hd4.issuer_id = d4.issuer_id
		                                                 and hd4.rule_id != d4.rule_id
		                                                 and hm.MUTEX_RULE_ID = hd4.rule_id))
		                               or d4.rule_id in 
		                                               (select distinct lm.MUTEX_RULE_ID
		                                                from RC_RULE_MUTEX lm
		                                                where lm.RULE_ID in
		                                                                  (select distinct ld4.rule_id
		                                                                   from rc_scan_rule_detail_4 ld4
		                                                                   inner join rc_scan_rule lsr on ld4.scan_rule_id = lsr.scan_rule_id 
		                                                                                            and lsr.scan_id = #{scanId} and lsr.status = '0'
		                                                                   where ld4.issuer_id = d4.issuer_id
		                                                                   and ld4.rule_id != d4.rule_id)     
		                                                and lm.MUTEX_LEVEL = '0')
		                          )
		)
	</update>
	<update id="excludeAllFundSameCompanyByUnion">
		update rc_scan_rule_detail_4 set exclude_by_union = '1'
		where exclude_by_union != '1' and exclude_by_mutex != '1'
		and scan_rule_detail_id in (
		
		                              select d4.scan_rule_detail_id 
		                              from rc_scan_rule_detail_4 d4
		                              inner join rc_scan_rule sr on d4.scan_rule_id = sr.scan_rule_id 
		                                                            and sr.scan_id = #{scanId} and sr.status = '0'
		                              where exists(
		                                            select 'X'
		                                            from RC_RULE_UNION u
		                                            where u.RULE_ID = d4.rule_id
		                                            and u.UNION_RULE_ID not in
		                                            (select ud4.rule_id as ruleId
		                                            from rc_scan_rule_detail_4 ud4
		                                            inner join rc_scan_rule usr on ud4.scan_rule_id = usr.scan_rule_id 
		                                                                           and usr.scan_id = #{scanId} and usr.status = '0'
		                                            where ud4.exclude_by_union = '0' 
		                                            and ud4.exclude_by_mutex = '0'
		                                            and ud4.rule_id != d4.rule_id))
		)
	</update>
	
</mapper>